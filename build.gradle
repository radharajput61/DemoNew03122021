// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    //   ext.kotlin_version = '1.3.61'
    ext.kotlin_version = '1.4.10'
    repositories {
        maven { url "https://maven.google.com" }
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        google()
        mavenCentral()

        mavenCentral {
            url "https://jcenter.bintray.com/"
        }


        maven { url "https://jitpack.io" }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
        classpath 'com.google.gms:google-services:4.3.10'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.20"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven {
            url 'https://maven.mapmyindia.com/repository/mapmyindia/'
        }
        maven { url "https://maven.google.com" }
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }

    }
}
configurations.all {
    resolutionStrategy {
        force 'androidx.core:core-ktx:1.6.0'
    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
} 



allprojects {
    repositories {

        mavenCentral {
            url "https://jcenter.bintray.com/"
        }


        maven { url "https://jitpack.io" }

        mavenCentral()

        maven {
            url "https://raw.github.com/Raizlabs/maven-releases/master/releases"
        }
        maven {
            url "http://oss.sonatype.org/content/repositories/snapshots"
            allowInsecureProtocol = true
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://maven.google.com"
        }
        google()
        jcenter()
        mavenLocal()
    }
}

subprojects {
    project.configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.google.android.gms'
                    && !details.requested.name.contains('multidex') ) {
                details.useVersion "12.0.1"
            }

//            if (details.requested.group == 'com.google.firebase') {
//                details.useVersion '12.0.1'
//            }
        }
    }
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
                compileSdkVersion 30
                buildToolsVersion "30"
            }
        }
    }
}

